{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "joints.schema.json",
  "title": "Skeleton Joints",
  "description": "Validation schema for common properties of skeleton hierarchies as mappings of joint names to their parent name.",
  "type": "object",
  "properties": {},
  "$defs": {
    "noSkeleton": {
      "description": "Empty joint mapping. No skeleton present.",
      "type": "object",
      "properties": {},
      "additionalProperties": false
    },
    "headwear": {
      "description": "Headwear skeleton hierarchy.",
      "type": "object",
      "properties": {
        "Spine": { "type": "string", "const": "Armature" },
        "Neck": { "type": "string", "const": "Spine" },
        "Head": { "type": "string", "const": "Neck" }
      },
      "required": ["Spine", "Neck", "Head"],
      "additionalProperties": {
        "not": true,
        "type": "object",
        "errorMessage": "Found unsupported skeleton joint: ${0#}. Check the correct name."
      },
      "errorMessage": {
        "required": {
          "Spine": "Missing Spine joint.",
          "Neck": "Missing Neck joint.",
          "Head": "Missing Head joint."
        },
        "_": "Invalid skeleton definition."
      }
    },
    "skeletonV2": {
      "allOf": [
        {
          "description": "Humanoid Ready Player Me skeleton hierarchy v2.",
          "type": "object",
          "properties": {
            "Hips": { "type": "string", "const": "Armature" },
            "Spine": { "type": "string", "const": "Hips" },
            "Spine1": { "type": "string", "const": "Spine" },
            "Spine2": { "type": "string", "const": "Spine1" },
            "Neck": { "type": "string", "const": "Spine2" },
            "Head": { "type": "string", "const": "Neck" },
            "HeadTop_End": { "type": "string", "const": "Head" },
            "LeftShoulder": { "type": "string", "const": "Spine2" },
            "LeftArm": { "type": "string", "const": "LeftShoulder" },
            "LeftForeArm": { "type": "string", "const": "LeftArm" },
            "LeftHand": { "type": "string", "const": "LeftForeArm" },
            "LeftHandThumb1": { "type": "string", "const": "LeftHand" },
            "LeftHandThumb2": { "type": "string", "const": "LeftHandThumb1" },
            "LeftHandThumb3": { "type": "string", "const": "LeftHandThumb2" },
            "LeftHandThumb4": { "type": "string", "const": "LeftHandThumb3" },
            "LeftHandIndex1": { "type": "string", "const": "LeftHand" },
            "LeftHandIndex2": { "type": "string", "const": "LeftHandIndex1" },
            "LeftHandIndex3": { "type": "string", "const": "LeftHandIndex2" },
            "LeftHandIndex4": { "type": "string", "const": "LeftHandIndex3" },
            "LeftHandMiddle1": { "type": "string", "const": "LeftHand" },
            "LeftHandMiddle2": { "type": "string", "const": "LeftHandMiddle1" },
            "LeftHandMiddle3": { "type": "string", "const": "LeftHandMiddle2" },
            "LeftHandMiddle4": { "type": "string", "const": "LeftHandMiddle3" },
            "LeftHandRing1": { "type": "string", "const": "LeftHand" },
            "LeftHandRing2": { "type": "string", "const": "LeftHandRing1" },
            "LeftHandRing3": { "type": "string", "const": "LeftHandRing2" },
            "LeftHandRing4": { "type": "string", "const": "LeftHandRing3" },
            "LeftHandPinky1": { "type": "string", "const": "LeftHand" },
            "LeftHandPinky2": { "type": "string", "const": "LeftHandPinky1" },
            "LeftHandPinky3": { "type": "string", "const": "LeftHandPinky2" },
            "LeftHandPinky4": { "type": "string", "const": "LeftHandPinky3" },
            "RightShoulder": { "type": "string", "const": "Spine2" },
            "RightArm": { "type": "string", "const": "RightShoulder" },
            "RightForeArm": { "type": "string", "const": "RightArm" },
            "RightHand": { "type": "string", "const": "RightForeArm" },
            "RightHandThumb1": { "type": "string", "const": "RightHand" },
            "RightHandThumb2": { "type": "string", "const": "RightHandThumb1" },
            "RightHandThumb3": { "type": "string", "const": "RightHandThumb2" },
            "RightHandThumb4": { "type": "string", "const": "RightHandThumb3" },
            "RightHandIndex1": { "type": "string", "const": "RightHand" },
            "RightHandIndex2": { "type": "string", "const": "RightHandIndex1" },
            "RightHandIndex3": { "type": "string", "const": "RightHandIndex2" },
            "RightHandIndex4": { "type": "string", "const": "RightHandIndex3" },
            "RightHandMiddle1": { "type": "string", "const": "RightHand" },
            "RightHandMiddle2": { "type": "string", "const": "RightHandMiddle1" },
            "RightHandMiddle3": { "type": "string", "const": "RightHandMiddle2" },
            "RightHandMiddle4": { "type": "string", "const": "RightHandMiddle3" },
            "RightHandRing1": { "type": "string", "const": "RightHand" },
            "RightHandRing2": { "type": "string", "const": "RightHandRing1" },
            "RightHandRing3": { "type": "string", "const": "RightHandRing2" },
            "RightHandRing4": { "type": "string", "const": "RightHandRing3" },
            "RightHandPinky1": { "type": "string", "const": "RightHand" },
            "RightHandPinky2": { "type": "string", "const": "RightHandPinky1" },
            "RightHandPinky3": { "type": "string", "const": "RightHandPinky2" },
            "RightHandPinky4": { "type": "string", "const": "RightHandPinky3" },
            "LeftUpLeg": { "type": "string", "const": "Hips" },
            "LeftLeg": { "type": "string", "const": "LeftUpLeg" },
            "LeftFoot": { "type": "string", "const": "LeftLeg" },
            "LeftToeBase": { "type": "string", "const": "LeftFoot" },
            "LeftToe_End": { "type": "string", "const": "LeftToeBase" },
            "RightUpLeg": { "type": "string", "const": "Hips" },
            "RightLeg": { "type": "string", "const": "RightUpLeg" },
            "RightFoot": { "type": "string", "const": "RightLeg" },
            "RightToeBase": { "type": "string", "const": "RightFoot" },
            "RightToe_End": { "type": "string", "const": "RightToeBase" }
          },
          "required": [
            "Hips",
            "Spine",
            "Spine1",
            "Spine2",
            "Neck",
            "Head",
            "HeadTop_End",
            "LeftShoulder",
            "LeftArm",
            "LeftForeArm",
            "LeftHand",
            "LeftHandThumb1",
            "LeftHandThumb2",
            "LeftHandThumb3",
            "LeftHandThumb4",
            "LeftHandIndex1",
            "LeftHandIndex2",
            "LeftHandIndex3",
            "LeftHandIndex4",
            "LeftHandMiddle1",
            "LeftHandMiddle2",
            "LeftHandMiddle3",
            "LeftHandMiddle4",
            "LeftHandRing1",
            "LeftHandRing2",
            "LeftHandRing3",
            "LeftHandRing4",
            "LeftHandPinky1",
            "LeftHandPinky2",
            "LeftHandPinky3",
            "LeftHandPinky4",
            "RightShoulder",
            "RightArm",
            "RightForeArm",
            "RightHand",
            "RightHandThumb1",
            "RightHandThumb2",
            "RightHandThumb3",
            "RightHandThumb4",
            "RightHandIndex1",
            "RightHandIndex2",
            "RightHandIndex3",
            "RightHandIndex4",
            "RightHandMiddle1",
            "RightHandMiddle2",
            "RightHandMiddle3",
            "RightHandMiddle4",
            "RightHandRing1",
            "RightHandRing2",
            "RightHandRing3",
            "RightHandRing4",
            "RightHandPinky1",
            "RightHandPinky2",
            "RightHandPinky3",
            "RightHandPinky4",
            "LeftUpLeg",
            "LeftLeg",
            "LeftFoot",
            "LeftToeBase",
            "LeftToe_End",
            "RightUpLeg",
            "RightLeg",
            "RightFoot",
            "RightToeBase",
            "RightToe_End"
          ]
        },
        { "$ref": "#/$defs/skeletonV2/$defs/maxJoints" }
      ],
      "$defs": {
        "maxJoints": {
          "description": "Maximum allowed number of joints in the skeleton.",
          "$comment": "A workaround to extend the schema with additional joints, but only allow defined ones in this schema. Usage: allOf: [{ '$ref': '#/$defs/skeletonV2' }, { '$ref': '#/$defs/skeletonV2/$defs/maxJoints' }]",
          "type": "object",
          "minProperties": 65,
          "maxProperties": 65,
          "errorMessage": {
            "minProperties": "Number of joints in the skeleton must be 65.",
            "maxProperties": "Exceeded supported number of 65 joints in the skeleton."
          }
        }
      },
      "errorMessage": { "required": "Missing skeleton joints." }
    },
    "skeletonV2WithEyes": {
      "$comment": "This schema extends the skeletonV2 schema. This is tricky when no extra joints are allowed in both, so we check for number of properties.",
      "allOf": [
        { "$ref": "#/$defs/skeletonV2" },
        { "$ref": "#/$defs/skeletonV2WithEyes/$defs/maxJoints" },
        {
          "description": "Humanoid Ready Player Me skeleton hierarchy with eye joints v2.",
          "type": "object",
          "properties": {
            "LeftEye": { "type": "string", "const": "Head" },
            "RightEye": { "type": "string", "const": "Head" }
          },
          "required": ["LeftEye", "RightEye"],
          "errorMessage": {
            "required": {
              "LeftEye": "Missing LeftEye joint.",
              "RightEye": "Missing RightEye joint."
            },
            "maxProperties": "Found too many skeleton joints.",
            "_": "Invalid skeleton definition."
          }
        }
      ],
      "$defs": {
        "maxJoints": {
          "description": "Maximum allowed number of joints in the skeleton.",
          "type": "object",
          "minProperties": 67,
          "maxProperties": 67,
          "errorMessage": {
            "minProperties": "Number of joints in the skeleton must be 67.",
            "maxProperties": "Exceeded supported number of 67 joints in the skeleton."
          }
        }
      }
    },
    "skeletonXr": {
      "$comment": "This schema extends the skeletonV2 schema.",
      "allOf": [
        { "$ref": "#/$defs/skeletonV2" },
        { "$ref": "#/$defs/skeletonXr/$defs/maxJoints" },
        {
          "description": "Humanoid Ready Player Me XR skeleton hierarchy",
          "type": "object",
          "properties": {
            "LeftEye": { "type": "string", "const": "Head" },
            "RightEye": { "type": "string", "const": "Head" },
            "LeftArmTwist": { "type": "string", "const": "LeftArm" },
            "LeftForeArm": { "type": "string", "const": "LeftArmTwist" },
            "LeftForeArmTwist": { "type": "string", "const": "LeftForeArm" },
            "LeftHand": { "type": "string", "const": "LeftForeArmTwist" },
            "LeftPalm": { "type": "string", "const": "LeftHand" },
            "LeftHandIndex0": { "type": "string", "const": "LeftHand" },
            "LeftHandIndex1": { "type": "string", "const": "LeftHandIndex0" },
            "LeftHandMiddle0": { "type": "string", "const": "LeftHand" },
            "LeftHandMiddle1": { "type": "string", "const": "LeftHandMiddle0" },
            "LeftHandRing0": { "type": "string", "const": "LeftHand" },
            "LeftHandRing1": { "type": "string", "const": "LeftHandRing0" },
            "LeftHandPinky0": { "type": "string", "const": "LeftHand" },
            "LeftHandPinky1": { "type": "string", "const": "LeftHandPinky0" },
            "RightArmTwist": { "type": "string", "const": "RightArm" },
            "RightForeArm": { "type": "string", "const": "RightArmTwist" },
            "RightForeArmTwist": { "type": "string", "const": "RightForeArm" },
            "RightHand": { "type": "string", "const": "RightForeArmTwist" },
            "RightPalm": { "type": "string", "const": "RightHand" },
            "RightHandIndex0": { "type": "string", "const": "RightHand" },
            "RightHandIndex1": { "type": "string", "const": "RightHandIndex0" },
            "RightHandMiddle0": { "type": "string", "const": "RightHand" },
            "RightHandMiddle1": { "type": "string", "const": "RightHandMiddle0" },
            "RightHandRing0": { "type": "string", "const": "RightHand" },
            "RightHandRing1": { "type": "string", "const": "RightHandRing0" },
            "RightHandPinky0": { "type": "string", "const": "RightHand" },
            "RightHandPinky1": { "type": "string", "const": "RightHandPinky0" }
          },
          "required": [
            "LeftEye",
            "RightEye",
            "LeftArmTwist",
            "LeftForeArmTwist",
            "LeftPalm",
            "LeftHandIndex0",
            "LeftHandMiddle0",
            "LeftHandRing0",
            "LeftHandPinky0",
            "RightArmTwist",
            "RightForeArmTwist",
            "RightPalm",
            "RightHandIndex0",
            "RightHandMiddle0",
            "RightHandRing0",
            "RightHandPinky0"
          ],
          "errorMessage": {
            "required": {
              "LeftEye": "Missing LeftEye joint.",
              "RightEye": "Missing RightEye joint.",
              "LeftArmTwist": "Missing LeftArmTwist joint.",
              "LeftForeArmTwist": "Missing LeftForeArmTwist joint.",
              "LeftPalm": "Missing LeftPalm joint.",
              "RightArmTwist": "Missing RightArmTwist joint.",
              "RightForeArmTwist": "Missing RightForeArmTwist joint.",
              "RightPalm": "Missing RightPalm joint."
            },
            "maxProperties": "Found too many skeleton joints.",
            "_": "Invalid skeleton definition."
          }
        }
      ],
      "$defs": {
        "maxJoints": {
          "description": "Maximum allowed number of joints in the skeleton.",
          "$comment": "A workaround to extend the schema with additional joints, but only allow defined ones in this schema. Usage: allOf: [{ '$ref': '#/$defs/skeletonXr' }, { '$ref': '#/$defs/skeletonXr/$defs/maxJoints' }]",
          "type": "object",
          "minProperties": 81,
          "maxProperties": 81,
          "errorMessage": {
            "minProperties": "Number of joints in the skeleton must be 81.",
            "maxProperties": "Exceeded supported number of 81 joints in the skeleton."
          }
        }
      }
    }
  }
}
